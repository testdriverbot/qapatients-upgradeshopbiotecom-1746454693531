name: TestDriver.ai / Generate / Exploratory

permissions:
  actions: write
  contents: write
  statuses: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      website-url:
        type: string
        required: true
      depth:
        type: number
        required: true
      max-depth:
        type: number
        required: true
      base-branch:
        type: string
        required: true
        default: main
      previous-file:
        type: string
        required: false
        description: Filename containing markdown content from previous regression step
    secrets:
      TESTDRIVER_API_KEY:
        required: true
      GH_TOKEN:
        required: true
      LOGIN_USERNAME:
        description: The username to use for login
      LOGIN_PASSWORD:
        description: The password to use for login
    outputs:
      pr-branch:
        value: ${{ jobs.exploratory.outputs.pr-branch }}

jobs:
  exploratory:
    name: Generate Exploratory Test Plans - Depth ${{ inputs.depth }}/${{ inputs.max-depth }}
    runs-on: ubuntu-latest
    outputs:
      pr-branch: ${{ steps.create-pr-branch.outputs.pr-branch }}
    steps:
      - id: create-pr-branch
        name: Create PR branch name
        shell: bash
        run: echo "pr-branch=testdriver/exploratory-${{ github.run_id }}-${{ github.run_attempt }}" >> $GITHUB_OUTPUT

      - uses: 'actions/github-script@v6'
        id: create-prompt
        env:
          DEPTH: ${{ inputs.depth }}
          PREVIOUS_FILE: ${{ inputs.previous-file }}
          LOGIN_USERNAME: ${{ secrets.LOGIN_USERNAME }}
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
        with:
          script: |
            const depth = parseInt(process.env.DEPTH)
            const username = process.env.LOGIN_USERNAME
            const password = process.env.LOGIN_PASSWORD
            let loginFile = depth === 1 && username && password ? 'login.yml' : ''
            let previousFile = loginFile || process.env.PREVIOUS_FILE

            let instructions = [
              `/generate web 10${previousFile ? ` testdriver/${previousFile} --skip-yaml` : ''}`,
              "/summarize"
            ]
              
            if(loginFile) {
              instructions = [
                `login with username "${username}" and password "${password}"`,
                `/save testdriver/${loginFile}`,
                ...instructions,
              ]
            }
            const prompt = instructions.map((instruction, i) => `${i + 1}. ${instruction}`).join("\n")
            console.log(prompt)
            return prompt

      - uses: testdriverai/action@main
        continue-on-error: true
        with:
          key: ${{ secrets.TESTDRIVER_API_KEY }}
          prompt: ${{ fromJson(steps.create-prompt.outputs.result) }}
          prerun: |
            cd $env:TEMP
            npm init -y
            npm install dashcam-chrome
            Start-Process "C:/Program Files/Google/Chrome/Application/chrome.exe" -ArgumentList "--start-maximized","--load-extension=$(pwd)/node_modules/dashcam-chrome/build","${{ inputs.website-url }}"
            exit
          create-pr: true
          pr-base: ${{ inputs.base-branch }}
          pr-title: 'TestDriver.ai / Generate Test Plans - Depth ${{ inputs.depth }}/${{ inputs.max-depth }}'
          pr-branch: ${{ steps.create-pr-branch.outputs.pr-branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_COLOR: '3'
